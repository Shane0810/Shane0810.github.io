{"title":"SpringBoot:diy启动类","slug":"SpringBoot-diy启动类","date":"2020-05-12T05:29:27.000Z","updated":"2020-05-12T05:34:00.402Z","comments":true,"path":"api/articles/SpringBoot-diy启动类.json","excerpt":null,"covers":["image-20200512124941647.png","image-20200512125408545.png","image-20200512130212499.png","image-20200512130222050.png","image-20200512131016499.png","image-20200512131922812.png","image-20200512132120884.png","image-20200512132422693.png","image-20200512132716659.png"],"content":"<h1 id=\"SpringBoot-diy启动类\"><a href=\"#SpringBoot-diy启动类\" class=\"headerlink\" title=\"SpringBoot: diy启动类\"></a>SpringBoot: diy启动类</h1><h2 id=\"SpringBoot启动类分析\"><a href=\"#SpringBoot启动类分析\" class=\"headerlink\" title=\"SpringBoot启动类分析\"></a>SpringBoot启动类分析</h2><p>在springboot的依赖中，我们通过添加各种启动类，可以省去很多配置的麻烦。因此要想自定义一个启动类，了解其实现也是很重要的一环。</p>\n<p>在此，通过堆webAutoconfiguration的分析来认识一个启动类的结构。</p>\n<p>主要包含两个项目，一个是spring-boot-starter-web,他是一个空的jar包，其依赖了autoconfiguration这个包，也就是spring-boot-starter-autoconfiguration，因此能够直接使用其中的WebMvcAutoConfiguration自动配置类。</p>\n<p><img src=\"image-20200512124941647.png\" alt=\"alt\"></p>\n<p>问题来了，如果这个spring-boot-starter-autoconfiguration中的所有配置类都注册岂不是太浪费资源。解决的办法就是增加@Conditional 注解，比如对于WebMvcAutoConfiguration:</p>\n<p><img src=\"image-20200512125408545.png\" alt=\"alt\"></p>\n<ul>\n<li><strong>拓展</strong>：</li>\n</ul>\n<p>只有在其中的类存在的时候才会生效，因此这个条件很重要。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ConditionalOnMissingBean</span>(WebMvcConfigurationSupport<span class=\"class\">.<span class=\"keyword\">class</span>)</span></span><br></pre></td></tr></table></figure>\n\n<p>这个条件和<code>@EnableWebMvc</code></p>\n<p><img src=\"image-20200512130212499.png\" alt=\"alt\"></p>\n<p><img src=\"image-20200512130222050.png\" alt=\"alt\"></p>\n<p>矛盾，只要在一个类，比如自定义一个WebMVC配置类，上增加<code>@EnableWebMvc</code>注解，就会完全接管WebMvc的控制，所以官方文档建议在拓展WebMvc的配置的时候，不能增加该注解。</p>\n<ul>\n<li>结论：</li>\n</ul>\n<p>其实写自己启动器也就是大致5个步骤</p>\n<p>1：编写自己具体的业务，根据自己的需求。</p>\n<p>2：xxxProperties配置文件的编写</p>\n<p>3：xxxAutoConfigure的编写</p>\n<p>4：将我们的启动类放到springboot项目中的resouces/META-INT下面的spring.factories（这个目录以及文件需要自己手动建）</p>\n<p>5：将自己编写的自动配置安装到Maven仓库即可。</p>\n<p>6：测试。</p>\n<ul>\n<li><p>说明</p>\n<p>官方命名：</p>\n<ul>\n<li>前缀：spring-boot-starter-xxx</li>\n<li>比如：spring-boot-starter-web….</li>\n</ul>\n<p>自定义命名：</p>\n<ul>\n<li>xxx-spring-boot-starter</li>\n<li>比如：mybatis-spring-boot-starter</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"DIY一个启动类\"><a href=\"#DIY一个启动类\" class=\"headerlink\" title=\"DIY一个启动类\"></a>DIY一个启动类</h2><p>1、首先新建一个空项目（Empty project）<strong>spring-boot-starter-diy</strong></p>\n<p>然后添加一个普通Maven模块：<strong>shane-spring-boot-starter</strong></p>\n<p>添加一个springboot模块: <strong>shane-spring-boot-starter-autoconfigure</strong>，删掉pom中的除spring-boot-starter之外的所有依赖。并且删除不必要的文件夹</p>\n<p>项目结构如图：</p>\n<p><img src=\"image-20200512131016499.png\" alt=\"alt\"></p>\n<p>2、在<strong>spring-boot-starter-diy</strong>的pom文件中，添加依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--启动器--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        引入自动配置模块--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.shane<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>shane-spring-boot-starter-autoconfigure<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>3、接下来在包com.shane下新建HelloService, HelloProperties, HelloServiceAutoConfiguration</p>\n<p><strong>HelloService</strong>: 服务目标是，针对输入的字符串，自动增加前后缀</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloService</span> </span>&#123;</span><br><span class=\"line\">    HelloProperties helloProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HelloProperties <span class=\"title\">getHelloProperties</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> helloProperties;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHelloProperties</span><span class=\"params\">(HelloProperties helloProperties)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.helloProperties = helloProperties;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">sayHello</span><span class=\"params\">(String name)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> helloProperties.getPrefix() + name + helloProperties.getSuffix();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>HelloProperties</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties</span>(prefix = <span class=\"string\">\"shane.hello\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloProperties</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String prefix;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String suffix;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPrefix</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> prefix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPrefix</span><span class=\"params\">(String prefix)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.prefix = prefix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getSuffix</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> suffix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSuffix</span><span class=\"params\">(String suffix)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.suffix = suffix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>HelloServiceAutoConfiguration</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnWebApplication</span><span class=\"comment\">//web应用生效</span></span><br><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties</span>(HelloProperties<span class=\"class\">.<span class=\"keyword\">class</span>)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">public</span> <span class=\"title\">class</span> <span class=\"title\">HelloServiceAutoConfiguration</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    HelloProperties helloProperties;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HelloService <span class=\"title\">helloService</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        HelloService service=<span class=\"keyword\">new</span> HelloService();</span><br><span class=\"line\">        service.setHelloProperties(helloProperties);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> service;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>4、在resource\\META-INF下新建spring.factories</p>\n<p><img src=\"image-20200512131922812.png\" alt=\"alt\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Auto Configure</span><br><span class=\"line\">org.springframework.boot.autoconfigure.EnableAutoConfiguration&#x3D;\\</span><br><span class=\"line\">com.shane.HelloServiceAutoConfiguration</span><br></pre></td></tr></table></figure>\n\n<p>5、添加到Maven工程中</p>\n<p><img src=\"image-20200512132120884.png\" alt=\"alt\"></p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>新建一个springboot工程，并添加web依赖</p>\n<p>添加自定义启动类的依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--自定义的启动类--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.shane<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>shane-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>导入之后</p>\n<p><img src=\"image-20200512132422693.png\" alt=\"alt\"></p>\n<p>成功导入jar包</p>\n<p>编写Controller类验证</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.shane.HelloService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloController</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    HelloService helloService;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/hello\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">hello</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> helloService.sayHello(<span class=\"string\">\"sxj\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在配置文件<strong>appliacation.properties</strong>中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shane.hello.prefix&#x3D;&quot;hi,&quot;</span><br><span class=\"line\">shane.hello.suffix&#x3D;&quot;,welcome!&quot;</span><br></pre></td></tr></table></figure>\n\n<p>运行：</p>\n<p><img src=\"image-20200512132716659.png\" alt=\"alt\"></p>\n","more":"<h1 id=\"SpringBoot-diy启动类\"><a href=\"#SpringBoot-diy启动类\" class=\"headerlink\" title=\"SpringBoot: diy启动类\"></a>SpringBoot: diy启动类</h1><h2 id=\"SpringBoot启动类分析\"><a href=\"#SpringBoot启动类分析\" class=\"headerlink\" title=\"SpringBoot启动类分析\"></a>SpringBoot启动类分析</h2><p>在springboot的依赖中，我们通过添加各种启动类，可以省去很多配置的麻烦。因此要想自定义一个启动类，了解其实现也是很重要的一环。</p>\n<p>在此，通过堆webAutoconfiguration的分析来认识一个启动类的结构。</p>\n<p>主要包含两个项目，一个是spring-boot-starter-web,他是一个空的jar包，其依赖了autoconfiguration这个包，也就是spring-boot-starter-autoconfiguration，因此能够直接使用其中的WebMvcAutoConfiguration自动配置类。</p>\n<p><img src=\"image-20200512124941647.png\" alt=\"alt\"></p>\n<p>问题来了，如果这个spring-boot-starter-autoconfiguration中的所有配置类都注册岂不是太浪费资源。解决的办法就是增加@Conditional 注解，比如对于WebMvcAutoConfiguration:</p>\n<p><img src=\"image-20200512125408545.png\" alt=\"alt\"></p>\n<ul>\n<li><strong>拓展</strong>：</li>\n</ul>\n<p>只有在其中的类存在的时候才会生效，因此这个条件很重要。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ConditionalOnMissingBean</span>(WebMvcConfigurationSupport<span class=\"class\">.<span class=\"keyword\">class</span>)</span></span><br></pre></td></tr></table></figure>\n\n<p>这个条件和<code>@EnableWebMvc</code></p>\n<p><img src=\"image-20200512130212499.png\" alt=\"alt\"></p>\n<p><img src=\"image-20200512130222050.png\" alt=\"alt\"></p>\n<p>矛盾，只要在一个类，比如自定义一个WebMVC配置类，上增加<code>@EnableWebMvc</code>注解，就会完全接管WebMvc的控制，所以官方文档建议在拓展WebMvc的配置的时候，不能增加该注解。</p>\n<ul>\n<li>结论：</li>\n</ul>\n<p>其实写自己启动器也就是大致5个步骤</p>\n<p>1：编写自己具体的业务，根据自己的需求。</p>\n<p>2：xxxProperties配置文件的编写</p>\n<p>3：xxxAutoConfigure的编写</p>\n<p>4：将我们的启动类放到springboot项目中的resouces/META-INT下面的spring.factories（这个目录以及文件需要自己手动建）</p>\n<p>5：将自己编写的自动配置安装到Maven仓库即可。</p>\n<p>6：测试。</p>\n<ul>\n<li><p>说明</p>\n<p>官方命名：</p>\n<ul>\n<li>前缀：spring-boot-starter-xxx</li>\n<li>比如：spring-boot-starter-web….</li>\n</ul>\n<p>自定义命名：</p>\n<ul>\n<li>xxx-spring-boot-starter</li>\n<li>比如：mybatis-spring-boot-starter</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"DIY一个启动类\"><a href=\"#DIY一个启动类\" class=\"headerlink\" title=\"DIY一个启动类\"></a>DIY一个启动类</h2><p>1、首先新建一个空项目（Empty project）<strong>spring-boot-starter-diy</strong></p>\n<p>然后添加一个普通Maven模块：<strong>shane-spring-boot-starter</strong></p>\n<p>添加一个springboot模块: <strong>shane-spring-boot-starter-autoconfigure</strong>，删掉pom中的除spring-boot-starter之外的所有依赖。并且删除不必要的文件夹</p>\n<p>项目结构如图：</p>\n<p><img src=\"image-20200512131016499.png\" alt=\"alt\"></p>\n<p>2、在<strong>spring-boot-starter-diy</strong>的pom文件中，添加依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--启动器--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        引入自动配置模块--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.shane<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>shane-spring-boot-starter-autoconfigure<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>3、接下来在包com.shane下新建HelloService, HelloProperties, HelloServiceAutoConfiguration</p>\n<p><strong>HelloService</strong>: 服务目标是，针对输入的字符串，自动增加前后缀</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloService</span> </span>&#123;</span><br><span class=\"line\">    HelloProperties helloProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HelloProperties <span class=\"title\">getHelloProperties</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> helloProperties;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHelloProperties</span><span class=\"params\">(HelloProperties helloProperties)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.helloProperties = helloProperties;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">sayHello</span><span class=\"params\">(String name)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> helloProperties.getPrefix() + name + helloProperties.getSuffix();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>HelloProperties</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties</span>(prefix = <span class=\"string\">\"shane.hello\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloProperties</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String prefix;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String suffix;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPrefix</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> prefix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPrefix</span><span class=\"params\">(String prefix)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.prefix = prefix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getSuffix</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> suffix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSuffix</span><span class=\"params\">(String suffix)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.suffix = suffix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>HelloServiceAutoConfiguration</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnWebApplication</span><span class=\"comment\">//web应用生效</span></span><br><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties</span>(HelloProperties<span class=\"class\">.<span class=\"keyword\">class</span>)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">public</span> <span class=\"title\">class</span> <span class=\"title\">HelloServiceAutoConfiguration</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    HelloProperties helloProperties;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HelloService <span class=\"title\">helloService</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        HelloService service=<span class=\"keyword\">new</span> HelloService();</span><br><span class=\"line\">        service.setHelloProperties(helloProperties);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> service;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>4、在resource\\META-INF下新建spring.factories</p>\n<p><img src=\"image-20200512131922812.png\" alt=\"alt\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Auto Configure</span><br><span class=\"line\">org.springframework.boot.autoconfigure.EnableAutoConfiguration&#x3D;\\</span><br><span class=\"line\">com.shane.HelloServiceAutoConfiguration</span><br></pre></td></tr></table></figure>\n\n<p>5、添加到Maven工程中</p>\n<p><img src=\"image-20200512132120884.png\" alt=\"alt\"></p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>新建一个springboot工程，并添加web依赖</p>\n<p>添加自定义启动类的依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--自定义的启动类--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.shane<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>shane-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>导入之后</p>\n<p><img src=\"image-20200512132422693.png\" alt=\"alt\"></p>\n<p>成功导入jar包</p>\n<p>编写Controller类验证</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.shane.HelloService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloController</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    HelloService helloService;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/hello\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">hello</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> helloService.sayHello(<span class=\"string\">\"sxj\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在配置文件<strong>appliacation.properties</strong>中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shane.hello.prefix&#x3D;&quot;hi,&quot;</span><br><span class=\"line\">shane.hello.suffix&#x3D;&quot;,welcome!&quot;</span><br></pre></td></tr></table></figure>\n\n<p>运行：</p>\n<p><img src=\"image-20200512132716659.png\" alt=\"alt\"></p>\n","categories":[],"tags":[{"name":"SpringBoot","path":"api/tags/SpringBoot.json"}]}