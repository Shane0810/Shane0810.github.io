{"title":"RabbitMQ（二）SpringBoot整合及集群","slug":"RabbitMQ（二）SpringBoot整合及集群","date":"2020-06-24T13:31:27.000Z","updated":"2020-06-24T13:42:32.246Z","comments":true,"path":"api/articles/RabbitMQ（二）SpringBoot整合及集群.json","excerpt":null,"covers":["image-20200624163007812.png","image-20200624163134094.png","image-20200624164407411.png","image-20200624164811791.png","image-20200624165255964.png","image-20200624170036153.png","image-20200624170247026.png","image-20200624170809226.png","image-20200624170922330.png","image-20200624195232303.png","image-20200624195637020.png","image-20200624211143223.png"],"content":"<h1 id=\"RabbitMQ（二）SpringBoot整合及集群\"><a href=\"#RabbitMQ（二）SpringBoot整合及集群\" class=\"headerlink\" title=\"RabbitMQ（二）SpringBoot整合及集群\"></a>RabbitMQ（二）SpringBoot整合及集群</h1><h2 id=\"1、搭建初始环境\"><a href=\"#1、搭建初始环境\" class=\"headerlink\" title=\"1、搭建初始环境\"></a>1、搭建初始环境</h2><p><strong>导入依赖</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>配置环境</strong>（yml）</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">rabbitmq-springboot</span></span><br><span class=\"line\">  <span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"number\">118.178</span><span class=\"number\">.125</span><span class=\"number\">.118</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">sxj</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">sxj</span></span><br><span class=\"line\">    <span class=\"attr\">virtual-host:</span> <span class=\"string\">/sxj</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、第一种模型\"><a href=\"#2、第一种模型\" class=\"headerlink\" title=\"2、第一种模型\"></a>2、第一种模型</h2><p>RabbitTemplate用来简化操作，使用的时候直接在项目中注入使用。</p>\n<p>在test中创建TestRabbitMQ作为消息生产者</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span>(classes =RabbitmqSpringbootApplication<span class=\"class\">.<span class=\"keyword\">class</span>)</span></span><br><span class=\"line\"><span class=\"class\">@<span class=\"title\">RunWith</span>(<span class=\"title\">SpringRunner</span>.<span class=\"title\">class</span>)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">public</span> <span class=\"title\">class</span> <span class=\"title\">TestRabbitMQ</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//注入rabbitTemplate</span></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RabbitTemplate rabbitTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        rabbitTemplate.convertAndSend(<span class=\"string\">\"hello\"</span>,<span class=\"string\">\"hello world\"</span>);<span class=\"comment\">//在没有消费者的情况下，不会创建队列。</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>创建消费者HelloConsumer</p>\n<p>包结构：</p>\n<p><img src=\"image-20200624163007812.png\" alt=\"alt\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.hello;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Queue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@RabbitListener</span>(queuesToDeclare = <span class=\"meta\">@Queue</span>(<span class=\"string\">\"hello\"</span>))<span class=\"comment\">//可以在@Queue中设置队列的持久化等配置。</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloConsumer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@RabbitHandler</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"image-20200624163134094.png\" alt=\"alt\"></p>\n<h2 id=\"3、workqueue\"><a href=\"#3、workqueue\" class=\"headerlink\" title=\"3、workqueue\"></a>3、workqueue</h2><p>默认是公平模式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//work</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testWork</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">        rabbitTemplate.convertAndSend(<span class=\"string\">\"work\"</span>,<span class=\"string\">\"work模型\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>定义WorkConsumer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.work;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Queue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">workConsumer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//一个消费者</span></span><br><span class=\"line\">    <span class=\"meta\">@RabbitHandler</span></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(queuesToDeclare = <span class=\"meta\">@Queue</span>(<span class=\"string\">\"work\"</span>))</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive1</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message1=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//一个消费者</span></span><br><span class=\"line\">    <span class=\"meta\">@RabbitHandler</span></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(queuesToDeclare = <span class=\"meta\">@Queue</span>(<span class=\"string\">\"work\"</span>))</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive2</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message2=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"image-20200624164407411.png\" alt=\"alt\"></p>\n<h2 id=\"4、fanout\"><a href=\"#4、fanout\" class=\"headerlink\" title=\"4、fanout\"></a>4、fanout</h2><p><strong>生产者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//fanout</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testFanout</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    rabbitTemplate.convertAndSend(<span class=\"string\">\"logs\"</span>,<span class=\"string\">\"\"</span>,<span class=\"string\">\"fanout的模型发送的消息\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行生产者，报错，不能直接创建交换机，这个交换机的创建必须在消费者中创建</p>\n<p><img src=\"image-20200624164811791.png\" alt=\"alt\"></p>\n<p><strong>消费者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.fanout;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Exchange;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Queue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.QueueBinding;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FanoutConsumer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,<span class=\"comment\">//创建临时队列</span></span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(value = <span class=\"string\">\"logs\"</span>,type = <span class=\"string\">\"fanout\"</span>)<span class=\"comment\">//绑定交换机</span></span><br><span class=\"line\">            )</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive1</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message1=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,<span class=\"comment\">//创建临时队列</span></span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(value = <span class=\"string\">\"logs\"</span>,type = <span class=\"string\">\"fanout\"</span>)<span class=\"comment\">//绑定交换机</span></span><br><span class=\"line\">            )</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive2</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message2=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"image-20200624165255964.png\" alt=\"alt\"></p>\n<h2 id=\"5、routing\"><a href=\"#5、routing\" class=\"headerlink\" title=\"5、routing\"></a>5、routing</h2><p><strong>生产者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//route</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testRoute</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    rabbitTemplate.convertAndSend(<span class=\"string\">\"directs\"</span>,<span class=\"string\">\"error\"</span>,<span class=\"string\">\"发送info的key的路由信息\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>消费者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.route;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Exchange;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Queue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.QueueBinding;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RoutingConsumer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,<span class=\"comment\">//创建临时队列</span></span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(value = <span class=\"string\">\"directs\"</span>,type = <span class=\"string\">\"direct\"</span>),<span class=\"comment\">//自定义交换机名称和类型</span></span><br><span class=\"line\">                    key=&#123;<span class=\"string\">\"info\"</span>,<span class=\"string\">\"error\"</span>,<span class=\"string\">\"warning\"</span>&#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive1</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message1=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,<span class=\"comment\">//创建临时队列</span></span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(value = <span class=\"string\">\"directs\"</span>,type = <span class=\"string\">\"direct\"</span>),<span class=\"comment\">//自定义交换机名称和类型</span></span><br><span class=\"line\">                    key=&#123;<span class=\"string\">\"error\"</span>&#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive2</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message2=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>第一次放送”info“类型的</p>\n<p><img src=\"image-20200624170036153.png\" alt=\"alt\"></p>\n<p>第二次发送”error”类型的</p>\n<p><img src=\"image-20200624170247026.png\" alt=\"alt\"></p>\n<h2 id=\"6、topic\"><a href=\"#6、topic\" class=\"headerlink\" title=\"6、topic\"></a>6、topic</h2><p><strong>生产者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//topic</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTopic</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    rabbitTemplate.convertAndSend(<span class=\"string\">\"topics\"</span>,<span class=\"string\">\"order.save\"</span>,<span class=\"string\">\"order.save路由消息\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>消费者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.route;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Exchange;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Queue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.QueueBinding;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RoutingTopicConsumer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,</span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(type=<span class=\"string\">\"topic\"</span>,name=<span class=\"string\">\"topics\"</span>),</span><br><span class=\"line\">                    key=&#123;<span class=\"string\">\"user.save\"</span>,<span class=\"string\">\"user.*\"</span>&#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive1</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message1=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,</span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(type=<span class=\"string\">\"topic\"</span>,name=<span class=\"string\">\"topics\"</span>),</span><br><span class=\"line\">                    key=&#123;<span class=\"string\">\"order.#\"</span>,<span class=\"string\">\"user.*\"</span>,<span class=\"string\">\"produce.#\"</span>&#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive2</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message2=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>1、发送user.save的消息</p>\n<p><img src=\"image-20200624170809226.png\" alt=\"alt\"></p>\n<p>2、发送order.save的消息</p>\n<p><img src=\"image-20200624170922330.png\" alt=\"alt\"></p>\n<h2 id=\"集群\"><a href=\"#集群\" class=\"headerlink\" title=\"集群\"></a>集群</h2><p><img src=\"image-20200624195232303.png\" alt=\"alt\"></p>\n<p>默认情况下，消息队列位于一个节点上，尽管可以从所有节点看到和访问</p>\n<p>主备架构：当集群中的master节点宕机，可以对queue中 的信息，进行备份，不能做到故障转移</p>\n<p>高可用：镜像集群。（基于普通集群）</p>\n<h3 id=\"镜像集群\"><a href=\"#镜像集群\" class=\"headerlink\" title=\"镜像集群\"></a>镜像集群</h3><p><img src=\"image-20200624195637020.png\" alt=\"alt\"></p>\n<p><img src=\"image-20200624211143223.png\" alt=\"alt\"></p>\n","more":"<h1 id=\"RabbitMQ（二）SpringBoot整合及集群\"><a href=\"#RabbitMQ（二）SpringBoot整合及集群\" class=\"headerlink\" title=\"RabbitMQ（二）SpringBoot整合及集群\"></a>RabbitMQ（二）SpringBoot整合及集群</h1><h2 id=\"1、搭建初始环境\"><a href=\"#1、搭建初始环境\" class=\"headerlink\" title=\"1、搭建初始环境\"></a>1、搭建初始环境</h2><p><strong>导入依赖</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>配置环境</strong>（yml）</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">rabbitmq-springboot</span></span><br><span class=\"line\">  <span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"number\">118.178</span><span class=\"number\">.125</span><span class=\"number\">.118</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">sxj</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">sxj</span></span><br><span class=\"line\">    <span class=\"attr\">virtual-host:</span> <span class=\"string\">/sxj</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、第一种模型\"><a href=\"#2、第一种模型\" class=\"headerlink\" title=\"2、第一种模型\"></a>2、第一种模型</h2><p>RabbitTemplate用来简化操作，使用的时候直接在项目中注入使用。</p>\n<p>在test中创建TestRabbitMQ作为消息生产者</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span>(classes =RabbitmqSpringbootApplication<span class=\"class\">.<span class=\"keyword\">class</span>)</span></span><br><span class=\"line\"><span class=\"class\">@<span class=\"title\">RunWith</span>(<span class=\"title\">SpringRunner</span>.<span class=\"title\">class</span>)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">public</span> <span class=\"title\">class</span> <span class=\"title\">TestRabbitMQ</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//注入rabbitTemplate</span></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RabbitTemplate rabbitTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        rabbitTemplate.convertAndSend(<span class=\"string\">\"hello\"</span>,<span class=\"string\">\"hello world\"</span>);<span class=\"comment\">//在没有消费者的情况下，不会创建队列。</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>创建消费者HelloConsumer</p>\n<p>包结构：</p>\n<p><img src=\"image-20200624163007812.png\" alt=\"alt\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.hello;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Queue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@RabbitListener</span>(queuesToDeclare = <span class=\"meta\">@Queue</span>(<span class=\"string\">\"hello\"</span>))<span class=\"comment\">//可以在@Queue中设置队列的持久化等配置。</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloConsumer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@RabbitHandler</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"image-20200624163134094.png\" alt=\"alt\"></p>\n<h2 id=\"3、workqueue\"><a href=\"#3、workqueue\" class=\"headerlink\" title=\"3、workqueue\"></a>3、workqueue</h2><p>默认是公平模式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//work</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testWork</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">        rabbitTemplate.convertAndSend(<span class=\"string\">\"work\"</span>,<span class=\"string\">\"work模型\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>定义WorkConsumer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.work;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Queue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">workConsumer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//一个消费者</span></span><br><span class=\"line\">    <span class=\"meta\">@RabbitHandler</span></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(queuesToDeclare = <span class=\"meta\">@Queue</span>(<span class=\"string\">\"work\"</span>))</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive1</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message1=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//一个消费者</span></span><br><span class=\"line\">    <span class=\"meta\">@RabbitHandler</span></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(queuesToDeclare = <span class=\"meta\">@Queue</span>(<span class=\"string\">\"work\"</span>))</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive2</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message2=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"image-20200624164407411.png\" alt=\"alt\"></p>\n<h2 id=\"4、fanout\"><a href=\"#4、fanout\" class=\"headerlink\" title=\"4、fanout\"></a>4、fanout</h2><p><strong>生产者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//fanout</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testFanout</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    rabbitTemplate.convertAndSend(<span class=\"string\">\"logs\"</span>,<span class=\"string\">\"\"</span>,<span class=\"string\">\"fanout的模型发送的消息\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行生产者，报错，不能直接创建交换机，这个交换机的创建必须在消费者中创建</p>\n<p><img src=\"image-20200624164811791.png\" alt=\"alt\"></p>\n<p><strong>消费者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.fanout;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Exchange;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Queue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.QueueBinding;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FanoutConsumer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,<span class=\"comment\">//创建临时队列</span></span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(value = <span class=\"string\">\"logs\"</span>,type = <span class=\"string\">\"fanout\"</span>)<span class=\"comment\">//绑定交换机</span></span><br><span class=\"line\">            )</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive1</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message1=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,<span class=\"comment\">//创建临时队列</span></span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(value = <span class=\"string\">\"logs\"</span>,type = <span class=\"string\">\"fanout\"</span>)<span class=\"comment\">//绑定交换机</span></span><br><span class=\"line\">            )</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive2</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message2=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"image-20200624165255964.png\" alt=\"alt\"></p>\n<h2 id=\"5、routing\"><a href=\"#5、routing\" class=\"headerlink\" title=\"5、routing\"></a>5、routing</h2><p><strong>生产者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//route</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testRoute</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    rabbitTemplate.convertAndSend(<span class=\"string\">\"directs\"</span>,<span class=\"string\">\"error\"</span>,<span class=\"string\">\"发送info的key的路由信息\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>消费者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.route;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Exchange;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Queue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.QueueBinding;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RoutingConsumer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,<span class=\"comment\">//创建临时队列</span></span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(value = <span class=\"string\">\"directs\"</span>,type = <span class=\"string\">\"direct\"</span>),<span class=\"comment\">//自定义交换机名称和类型</span></span><br><span class=\"line\">                    key=&#123;<span class=\"string\">\"info\"</span>,<span class=\"string\">\"error\"</span>,<span class=\"string\">\"warning\"</span>&#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive1</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message1=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,<span class=\"comment\">//创建临时队列</span></span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(value = <span class=\"string\">\"directs\"</span>,type = <span class=\"string\">\"direct\"</span>),<span class=\"comment\">//自定义交换机名称和类型</span></span><br><span class=\"line\">                    key=&#123;<span class=\"string\">\"error\"</span>&#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive2</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message2=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>第一次放送”info“类型的</p>\n<p><img src=\"image-20200624170036153.png\" alt=\"alt\"></p>\n<p>第二次发送”error”类型的</p>\n<p><img src=\"image-20200624170247026.png\" alt=\"alt\"></p>\n<h2 id=\"6、topic\"><a href=\"#6、topic\" class=\"headerlink\" title=\"6、topic\"></a>6、topic</h2><p><strong>生产者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//topic</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTopic</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    rabbitTemplate.convertAndSend(<span class=\"string\">\"topics\"</span>,<span class=\"string\">\"order.save\"</span>,<span class=\"string\">\"order.save路由消息\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>消费者</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.shane.route;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Exchange;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.Queue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.QueueBinding;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RoutingTopicConsumer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,</span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(type=<span class=\"string\">\"topic\"</span>,name=<span class=\"string\">\"topics\"</span>),</span><br><span class=\"line\">                    key=&#123;<span class=\"string\">\"user.save\"</span>,<span class=\"string\">\"user.*\"</span>&#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive1</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message1=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener</span>(bindings = &#123;</span><br><span class=\"line\">            <span class=\"meta\">@QueueBinding</span>(</span><br><span class=\"line\">                    value = <span class=\"meta\">@Queue</span>,</span><br><span class=\"line\">                    exchange = <span class=\"meta\">@Exchange</span>(type=<span class=\"string\">\"topic\"</span>,name=<span class=\"string\">\"topics\"</span>),</span><br><span class=\"line\">                    key=&#123;<span class=\"string\">\"order.#\"</span>,<span class=\"string\">\"user.*\"</span>,<span class=\"string\">\"produce.#\"</span>&#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receive2</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"message2=\"</span>+message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>1、发送user.save的消息</p>\n<p><img src=\"image-20200624170809226.png\" alt=\"alt\"></p>\n<p>2、发送order.save的消息</p>\n<p><img src=\"image-20200624170922330.png\" alt=\"alt\"></p>\n<h2 id=\"集群\"><a href=\"#集群\" class=\"headerlink\" title=\"集群\"></a>集群</h2><p><img src=\"image-20200624195232303.png\" alt=\"alt\"></p>\n<p>默认情况下，消息队列位于一个节点上，尽管可以从所有节点看到和访问</p>\n<p>主备架构：当集群中的master节点宕机，可以对queue中 的信息，进行备份，不能做到故障转移</p>\n<p>高可用：镜像集群。（基于普通集群）</p>\n<h3 id=\"镜像集群\"><a href=\"#镜像集群\" class=\"headerlink\" title=\"镜像集群\"></a>镜像集群</h3><p><img src=\"image-20200624195637020.png\" alt=\"alt\"></p>\n<p><img src=\"image-20200624211143223.png\" alt=\"alt\"></p>\n","categories":[],"tags":[{"name":"RabbitMQ","path":"api/tags/RabbitMQ.json"}]}