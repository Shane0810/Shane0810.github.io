{"title":"Redis学习系列（二）事务和配置文件","slug":"Redis学习系列（二）事务和配置文件","date":"2020-06-20T15:08:12.000Z","updated":"2020-06-20T15:09:28.724Z","comments":true,"path":"api/articles/Redis学习系列（二）事务和配置文件.json","excerpt":null,"covers":null,"content":"<h1 id=\"Redis（二）三种特殊的数据类型、事务、redis-conf\"><a href=\"#Redis（二）三种特殊的数据类型、事务、redis-conf\" class=\"headerlink\" title=\"Redis（二）三种特殊的数据类型、事务、redis.conf\"></a>Redis（二）三种特殊的数据类型、事务、redis.conf</h1><h2 id=\"三种特殊的数据类型\"><a href=\"#三种特殊的数据类型\" class=\"headerlink\" title=\"三种特殊的数据类型\"></a>三种特殊的数据类型</h2><h3 id=\"1、geospatialredis\"><a href=\"#1、geospatialredis\" class=\"headerlink\" title=\"1、geospatialredis\"></a>1、geospatialredis</h3><p>地理位置。定位，距离计算。</p>\n<p>Redis的Geo能够推算地理位置信息，两地之间的距离，一定半径内的人。</p>\n<p>一共有六个命令</p>\n<blockquote>\n<p>geoadd</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#规则：两级无法直接添加，可以直接通过java程序一次性导入</span></span><br><span class=\"line\"><span class=\"comment\">#参数：key 值（纬度，经度，名称）</span></span><br><span class=\"line\">127.0.0.1:6379&gt; geoadd china:city 116.40 39.90 beijing</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; geoadd china:city 121.47 31.23 shanghai</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; geoadd china:city 106.50 29.53 chongqin</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; geoadd china:city 114.05 22.52 shengzhen</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; geoadd china:city 120.16 30.24 hangzhou</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>geopos</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#获得位置</span></span><br><span class=\"line\">127.0.0.1:6379&gt; geopos china:city hangzhou</span><br><span class=\"line\">1) 1) <span class=\"string\">\"120.1600000262260437\"</span></span><br><span class=\"line\">   2) <span class=\"string\">\"30.2400003229490224\"</span></span><br><span class=\"line\">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>geodist</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#直线距离</span></span><br><span class=\"line\">127.0.0.1:6379&gt; geodist china:city hangzhou beijing km</span><br><span class=\"line\"><span class=\"string\">\"1127.3378\"</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>georadius</p>\n<p>以给定的经纬度为中心，找出某一半径内的元素</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; georadius china:city 120 30 1000 km</span><br><span class=\"line\">1) <span class=\"string\">\"hangzhou\"</span></span><br><span class=\"line\">2) <span class=\"string\">\"shanghai\"</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>georadiusbymember</p>\n<p>以给定的成员找某一半径内的元素</p>\n</blockquote>\n<blockquote>\n<p>geohash</p>\n<p>该命令返回一个11字符长度的字符串</p>\n</blockquote>\n<ul>\n<li>是基于Zset的，所以Zset的命令可以直接使用。</li>\n</ul>\n<h3 id=\"Hyperloglog\"><a href=\"#Hyperloglog\" class=\"headerlink\" title=\"Hyperloglog\"></a>Hyperloglog</h3><p>基数：不重复的元素，可以接受误差</p>\n<p>Hyperloglog用于做基数统计。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; pfadd mykey 1 2 3 4 5 6 i j k</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; pfcount mykey </span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 9</span><br><span class=\"line\">127.0.0.1:6379&gt; pfadd mykey i j k a d b </span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; pfcount mykey </span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 12</span><br><span class=\"line\">127.0.0.1:6379&gt; pfadd mykey2 i j a f f e e</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; pfmerge mykey3 mykey mykey2</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; pfcount mykey3</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 14</span><br></pre></td></tr></table></figure>\n\n<p>如果允许容错，可以使用</p>\n<p>不允许容错，就不可以使用</p>\n<h3 id=\"Bitmaps\"><a href=\"#Bitmaps\" class=\"headerlink\" title=\"Bitmaps\"></a>Bitmaps</h3><p>按位存储</p>\n<p>位图。</p>\n<p>操作二进制来进行记录。只有0和1的状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#周一1；周二0；。。。</span></span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 0 1</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 1 0</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 2 0</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 3 3</span><br><span class=\"line\">(error) ERR bit is not an <span class=\"built_in\">integer</span> or out of range</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 3 1</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 4 1</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 5 1</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 6 0</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看</span></span><br><span class=\"line\">127.0.0.1:6379&gt; getbit sign 1</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#统计打卡天数</span></span><br><span class=\"line\">127.0.0.1:6379&gt; bitcount sign</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 4</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"事务\"><a href=\"#事务\" class=\"headerlink\" title=\"事务\"></a>事务</h2><p>Redis单条命令能够保证原子性，事务不保证原子性</p>\n<p>Redis没有隔离级别的概念</p>\n<p>所有的命令在事务中，并没有直接被执行。只有发起执行命令的时候才会执行</p>\n<p>redis的事务：</p>\n<ul>\n<li>开启事务multi</li>\n<li>命令入队</li>\n<li>执行事务exec</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; multi<span class=\"comment\">#开启事务</span></span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k1 k1<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k2 k2<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; get k2<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">exec</span><span class=\"comment\">#执行事务</span></span><br><span class=\"line\">1) OK</span><br><span class=\"line\">2) OK</span><br><span class=\"line\">3) <span class=\"string\">\"k2\"</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>放弃事务</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; multi<span class=\"comment\">#开启事务</span></span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k1 v1<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k2 v2<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k4 v4<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; discard<span class=\"comment\">#放弃事务</span></span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; get key4<span class=\"comment\">#查看之间的命令是否执行，发现队列中的命令都没有执行</span></span><br><span class=\"line\">(nil)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>编译型异常（代码有问题！命令有错！），事务中的所有命令都不会被执行！</li>\n<li>运行时异常(例如除零异常），如果事务队列中存在语法性，那么执行命令的时候，其他命令是可以正常执行的，错误命令会抛出异常！</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; multi</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k1 v1 </span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k2 v2</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; getset k3<span class=\"comment\">#编译型异常</span></span><br><span class=\"line\">(error) ERR wrong number of arguments <span class=\"keyword\">for</span> <span class=\"string\">'getset'</span> <span class=\"built_in\">command</span></span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k4 v4</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">exec</span></span><br><span class=\"line\">(error) EXECABORT Transaction discarded because of previous errors.</span><br><span class=\"line\"><span class=\"comment\">#所有的命令都没有执行</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k1 <span class=\"string\">\"v1\"</span></span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; multi</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; incr k1<span class=\"comment\">#运行时异常</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k2 v2</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; get k2</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">exec</span></span><br><span class=\"line\">1) (error) ERR value is not an <span class=\"built_in\">integer</span> or out of range</span><br><span class=\"line\">2) OK</span><br><span class=\"line\">3) <span class=\"string\">\"v2\"</span></span><br><span class=\"line\"><span class=\"comment\">#虽然第一条命令报错，但是其他命令没有受到影响。</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>监控</p>\n</blockquote>\n<p><strong>悲观锁：</strong><br>无论做什么都会加锁</p>\n<p><strong>乐观锁：</strong><br>认为任何时候都不会处问题，所以不会上锁，更新数据的时候可以判断一下，在此期间是否有人修改过这个数据</p>\n<ul>\n<li>获取version</li>\n<li>更新的时候比较version</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; flushdb</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> money 100</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> out 0</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; watch money</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; multi</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; decrby money 20</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; incrby out 20</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">exec</span></span><br><span class=\"line\">1) (<span class=\"built_in\">integer</span>) 80</span><br><span class=\"line\">2) (<span class=\"built_in\">integer</span>) 20</span><br></pre></td></tr></table></figure>\n\n<p>多线程修改值，使用watch可以当作redis的乐观锁操作！</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#线程一</span></span><br><span class=\"line\">127.0.0.1:6379&gt; watch money<span class=\"comment\">#监视 money，获取version，和原来的比较，发现更改了，事务失败。</span></span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; multi</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; decrby money 20</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; incrby out 20 <span class=\"comment\">#然后在这里，线程二执行set money 10000</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">exec</span><span class=\"comment\">#发现这里的命令都没有执行，这就是事务为提交，这个是一个乐观锁的实现。</span></span><br><span class=\"line\">(nil)</span><br><span class=\"line\"><span class=\"comment\">#线程2</span></span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> money 10000</span><br><span class=\"line\">OK</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Jedis\"><a href=\"#Jedis\" class=\"headerlink\" title=\"Jedis\"></a>Jedis</h2><blockquote>\n<p>是redis官方推荐的java连接开发工具，使用java操作reids中间件！</p>\n</blockquote>\n<p>1、直接找maven依赖</p>\n<p>2、new 一个Jedis对象，根据Jedis的构造函数，来将redis的主机ip地址和端口号闯进去，之后的命令和上面一样，只是都是jedis.xx的形式调用。</p>\n<p>不推荐使用</p>\n<h2 id=\"SpringBoot整合\"><a href=\"#SpringBoot整合\" class=\"headerlink\" title=\"SpringBoot整合\"></a>SpringBoot整合</h2><p>在springboot2.x之后，jedis被替换为lettuce</p>\n<p>jedis：采用的是直连的，多个线程操作的，是不安全的，如果想要避免不安全的操作，使用jedis pool连接池，使用的是BIO</p>\n<p>lettuce：采用netty，实例可以在多个线程中进行分享，不存在线程不安全的情况，可以减少线程不安全的情况。可以减少线程数量。NIO</p>\n<p>重点：</p>\n<p>自定义redisTemplate</p>\n<h2 id=\"redis-conf\"><a href=\"#redis-conf\" class=\"headerlink\" title=\"redis.conf\"></a>redis.conf</h2><blockquote>\n<p>网络</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind 127.0.0.1</span><br><span class=\"line\">protected-mode yes</span><br><span class=\"line\">port 6379</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>通用</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">daemonize yes <span class=\"comment\">#以守护进程的方式运行，默认是no，需要开启为yes</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Specify the server verbosity level.</span></span><br><span class=\"line\"><span class=\"comment\"># This can be one of:</span></span><br><span class=\"line\"><span class=\"comment\"># debug (a lot of information, useful for development/testing)</span></span><br><span class=\"line\"><span class=\"comment\"># verbose (many rarely useful info, but not a mess like the debug level)</span></span><br><span class=\"line\"><span class=\"comment\"># notice (moderately verbose, what you want in production probably)</span></span><br><span class=\"line\"><span class=\"comment\"># warning (only very important / critical messages are logged)</span></span><br><span class=\"line\">loglevel notice</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Specify the log file name. Also the empty string can be used to force</span></span><br><span class=\"line\"><span class=\"comment\"># Redis to log on the standard output. Note that if you use standard</span></span><br><span class=\"line\"><span class=\"comment\"># output for logging but daemonize, logs will be sent to /dev/null</span></span><br><span class=\"line\">logfile <span class=\"string\">\"\"</span><span class=\"comment\">#日志的文件名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set the number of databases. The default database is DB 0, you can select</span></span><br><span class=\"line\"><span class=\"comment\"># a different one on a per-connection basis using SELECT &lt;dbid&gt; where</span></span><br><span class=\"line\"><span class=\"comment\"># dbid is a number between 0 and 'databases'-1</span></span><br><span class=\"line\">databases 16 <span class=\"comment\">#默认的数据库数量</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>快照</p>\n</blockquote>\n<p>持久化，在规定的时间内，执行了多少次操作，则会持久化到文件.rdb  .aof</p>\n<p>redis是内存数据库，如果没有持久化，断电就会消失</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#900s内，如果至少一个key进行了修改，就会进行持久化操作。</span></span><br><span class=\"line\">save 900 1</span><br><span class=\"line\"><span class=\"comment\">#300s内，如果至少10个key进行了修改，就会进行持久化操作</span></span><br><span class=\"line\">save 300 10</span><br><span class=\"line\"><span class=\"comment\">#60s内，如果至少10000个key进行了修改，就会进行持久化操作</span></span><br><span class=\"line\">save 60 10000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># By default Redis will stop accepting writes if RDB snapshots are enabled</span></span><br><span class=\"line\"><span class=\"comment\"># (at least one save point) and the latest background save failed.</span></span><br><span class=\"line\"><span class=\"comment\"># This will make the user aware (in a hard way) that data is not persisting</span></span><br><span class=\"line\"><span class=\"comment\"># on disk properly, otherwise chances are that no one will notice and some</span></span><br><span class=\"line\"><span class=\"comment\"># disaster will happen.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If the background saving process will start working again Redis will</span></span><br><span class=\"line\"><span class=\"comment\"># automatically allow writes again.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># However if you have setup your proper monitoring of the Redis server</span></span><br><span class=\"line\"><span class=\"comment\"># and persistence, you may want to disable this feature so that Redis will</span></span><br><span class=\"line\"><span class=\"comment\"># continue to work as usual even if there are problems with disk,</span></span><br><span class=\"line\"><span class=\"comment\"># permissions, and so forth.</span></span><br><span class=\"line\">stop-writes-on-bgsave-error yes<span class=\"comment\">#持久化如果出错，是否需要停止工作</span></span><br><span class=\"line\"></span><br><span class=\"line\">rdbcompression yes<span class=\"comment\">#是否压缩rdb文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The working directory.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># The DB will be written inside this directory, with the filename specified</span></span><br><span class=\"line\"><span class=\"comment\"># above using the 'dbfilename' configuration directive.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># The Append Only File will also be created inside this directory.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Note that you must specify a directory here, not a file name.</span></span><br><span class=\"line\">dir ./<span class=\"comment\">#持久化文件保存的目录</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>scurity</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># IMPORTANT <span class=\"doctag\">NOTE:</span> starting with Redis 6 \"requirepass\" is just a compatiblity</span></span><br><span class=\"line\"><span class=\"comment\"># layer on top of the new ACL system. The option effect will be just setting</span></span><br><span class=\"line\"><span class=\"comment\"># the password for the default user. Clients will still authenticate using</span></span><br><span class=\"line\"><span class=\"comment\"># AUTH &lt;password&gt; as usually, or more explicitly with AUTH default &lt;password&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># if they follow the new protocol: both will work.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># requirepass foobared</span></span><br><span class=\"line\">requirepass XXX<span class=\"comment\">#在这里设置登录密码</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>限制clients</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">########################### ACTIVE DEFRAGMENTATION #######################</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Once the limit is reached Redis will close all the new connections sending</span></span><br><span class=\"line\"><span class=\"comment\"># an error 'max number of clients reached'.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># maxclients 10000#设置能连接上redis的最大客户端数量</span></span><br><span class=\"line\"></span><br><span class=\"line\">maxmemory-policy noeviction<span class=\"comment\">#内存达到上限之后的默认处理策略</span></span><br><span class=\"line\"></span><br><span class=\"line\">这个策略有很多种：</span><br><span class=\"line\"><span class=\"comment\"># volatile-lru -&gt; Evict using approximated LRU, only keys with an expire set.对设置了过期时间的keys进行LRU</span></span><br><span class=\"line\"><span class=\"comment\"># allkeys-lru -&gt; Evict any key using approximated LRU.对所有的keys进行lru</span></span><br><span class=\"line\"><span class=\"comment\"># volatile-lfu -&gt; Evict using approximated LFU, only keys with an expire set.对设置了过期时间的keys进行lfu</span></span><br><span class=\"line\"><span class=\"comment\"># allkeys-lfu -&gt; Evict any key using approximated LFU.对所有的keys进行lfu</span></span><br><span class=\"line\"><span class=\"comment\"># volatile-random -&gt; Remove a random key having an expire set.随机的删除设置了过期时间的keys</span></span><br><span class=\"line\"><span class=\"comment\"># allkeys-random -&gt; Remove a random key, any key.对所有的keys随机删除</span></span><br><span class=\"line\"><span class=\"comment\"># volatile-ttl -&gt; Remove the key with the nearest expire time (minor TTL)删除即将过期的</span></span><br><span class=\"line\"><span class=\"comment\"># noeviction -&gt; Don't evict anything, just return an error on write operations.不做处理，报错</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>APPEND ONLY </p>\n</blockquote>\n<p>aof</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">appendonly no<span class=\"comment\">#默认不开启aof模式，默认使用rdb方式持久化。</span></span><br><span class=\"line\">appendfilename <span class=\"string\">\"appendonly.aof\"</span><span class=\"comment\">#持久化文件的名字</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#同步策略</span></span><br><span class=\"line\"><span class=\"comment\"># appendfsync always#每次修改，都要同步</span></span><br><span class=\"line\">appendfsync everysec<span class=\"comment\">#每秒同步一次</span></span><br><span class=\"line\"><span class=\"comment\"># appendfsync no</span></span><br></pre></td></tr></table></figure>\n\n","more":"<h1 id=\"Redis（二）三种特殊的数据类型、事务、redis-conf\"><a href=\"#Redis（二）三种特殊的数据类型、事务、redis-conf\" class=\"headerlink\" title=\"Redis（二）三种特殊的数据类型、事务、redis.conf\"></a>Redis（二）三种特殊的数据类型、事务、redis.conf</h1><h2 id=\"三种特殊的数据类型\"><a href=\"#三种特殊的数据类型\" class=\"headerlink\" title=\"三种特殊的数据类型\"></a>三种特殊的数据类型</h2><h3 id=\"1、geospatialredis\"><a href=\"#1、geospatialredis\" class=\"headerlink\" title=\"1、geospatialredis\"></a>1、geospatialredis</h3><p>地理位置。定位，距离计算。</p>\n<p>Redis的Geo能够推算地理位置信息，两地之间的距离，一定半径内的人。</p>\n<p>一共有六个命令</p>\n<blockquote>\n<p>geoadd</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#规则：两级无法直接添加，可以直接通过java程序一次性导入</span></span><br><span class=\"line\"><span class=\"comment\">#参数：key 值（纬度，经度，名称）</span></span><br><span class=\"line\">127.0.0.1:6379&gt; geoadd china:city 116.40 39.90 beijing</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; geoadd china:city 121.47 31.23 shanghai</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; geoadd china:city 106.50 29.53 chongqin</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; geoadd china:city 114.05 22.52 shengzhen</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; geoadd china:city 120.16 30.24 hangzhou</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>geopos</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#获得位置</span></span><br><span class=\"line\">127.0.0.1:6379&gt; geopos china:city hangzhou</span><br><span class=\"line\">1) 1) <span class=\"string\">\"120.1600000262260437\"</span></span><br><span class=\"line\">   2) <span class=\"string\">\"30.2400003229490224\"</span></span><br><span class=\"line\">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>geodist</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#直线距离</span></span><br><span class=\"line\">127.0.0.1:6379&gt; geodist china:city hangzhou beijing km</span><br><span class=\"line\"><span class=\"string\">\"1127.3378\"</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>georadius</p>\n<p>以给定的经纬度为中心，找出某一半径内的元素</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; georadius china:city 120 30 1000 km</span><br><span class=\"line\">1) <span class=\"string\">\"hangzhou\"</span></span><br><span class=\"line\">2) <span class=\"string\">\"shanghai\"</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>georadiusbymember</p>\n<p>以给定的成员找某一半径内的元素</p>\n</blockquote>\n<blockquote>\n<p>geohash</p>\n<p>该命令返回一个11字符长度的字符串</p>\n</blockquote>\n<ul>\n<li>是基于Zset的，所以Zset的命令可以直接使用。</li>\n</ul>\n<h3 id=\"Hyperloglog\"><a href=\"#Hyperloglog\" class=\"headerlink\" title=\"Hyperloglog\"></a>Hyperloglog</h3><p>基数：不重复的元素，可以接受误差</p>\n<p>Hyperloglog用于做基数统计。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; pfadd mykey 1 2 3 4 5 6 i j k</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; pfcount mykey </span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 9</span><br><span class=\"line\">127.0.0.1:6379&gt; pfadd mykey i j k a d b </span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; pfcount mykey </span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 12</span><br><span class=\"line\">127.0.0.1:6379&gt; pfadd mykey2 i j a f f e e</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; pfmerge mykey3 mykey mykey2</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; pfcount mykey3</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 14</span><br></pre></td></tr></table></figure>\n\n<p>如果允许容错，可以使用</p>\n<p>不允许容错，就不可以使用</p>\n<h3 id=\"Bitmaps\"><a href=\"#Bitmaps\" class=\"headerlink\" title=\"Bitmaps\"></a>Bitmaps</h3><p>按位存储</p>\n<p>位图。</p>\n<p>操作二进制来进行记录。只有0和1的状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#周一1；周二0；。。。</span></span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 0 1</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 1 0</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 2 0</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 3 3</span><br><span class=\"line\">(error) ERR bit is not an <span class=\"built_in\">integer</span> or out of range</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 3 1</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 4 1</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 5 1</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; setbit sign 6 0</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看</span></span><br><span class=\"line\">127.0.0.1:6379&gt; getbit sign 1</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#统计打卡天数</span></span><br><span class=\"line\">127.0.0.1:6379&gt; bitcount sign</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 4</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"事务\"><a href=\"#事务\" class=\"headerlink\" title=\"事务\"></a>事务</h2><p>Redis单条命令能够保证原子性，事务不保证原子性</p>\n<p>Redis没有隔离级别的概念</p>\n<p>所有的命令在事务中，并没有直接被执行。只有发起执行命令的时候才会执行</p>\n<p>redis的事务：</p>\n<ul>\n<li>开启事务multi</li>\n<li>命令入队</li>\n<li>执行事务exec</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; multi<span class=\"comment\">#开启事务</span></span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k1 k1<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k2 k2<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; get k2<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">exec</span><span class=\"comment\">#执行事务</span></span><br><span class=\"line\">1) OK</span><br><span class=\"line\">2) OK</span><br><span class=\"line\">3) <span class=\"string\">\"k2\"</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>放弃事务</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; multi<span class=\"comment\">#开启事务</span></span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k1 v1<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k2 v2<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k4 v4<span class=\"comment\">#命令入队</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; discard<span class=\"comment\">#放弃事务</span></span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; get key4<span class=\"comment\">#查看之间的命令是否执行，发现队列中的命令都没有执行</span></span><br><span class=\"line\">(nil)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>编译型异常（代码有问题！命令有错！），事务中的所有命令都不会被执行！</li>\n<li>运行时异常(例如除零异常），如果事务队列中存在语法性，那么执行命令的时候，其他命令是可以正常执行的，错误命令会抛出异常！</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; multi</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k1 v1 </span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k2 v2</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; getset k3<span class=\"comment\">#编译型异常</span></span><br><span class=\"line\">(error) ERR wrong number of arguments <span class=\"keyword\">for</span> <span class=\"string\">'getset'</span> <span class=\"built_in\">command</span></span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k4 v4</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">exec</span></span><br><span class=\"line\">(error) EXECABORT Transaction discarded because of previous errors.</span><br><span class=\"line\"><span class=\"comment\">#所有的命令都没有执行</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k1 <span class=\"string\">\"v1\"</span></span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; multi</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; incr k1<span class=\"comment\">#运行时异常</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> k2 v2</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; get k2</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">exec</span></span><br><span class=\"line\">1) (error) ERR value is not an <span class=\"built_in\">integer</span> or out of range</span><br><span class=\"line\">2) OK</span><br><span class=\"line\">3) <span class=\"string\">\"v2\"</span></span><br><span class=\"line\"><span class=\"comment\">#虽然第一条命令报错，但是其他命令没有受到影响。</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>监控</p>\n</blockquote>\n<p><strong>悲观锁：</strong><br>无论做什么都会加锁</p>\n<p><strong>乐观锁：</strong><br>认为任何时候都不会处问题，所以不会上锁，更新数据的时候可以判断一下，在此期间是否有人修改过这个数据</p>\n<ul>\n<li>获取version</li>\n<li>更新的时候比较version</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; flushdb</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> money 100</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> out 0</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; watch money</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; multi</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; decrby money 20</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; incrby out 20</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">exec</span></span><br><span class=\"line\">1) (<span class=\"built_in\">integer</span>) 80</span><br><span class=\"line\">2) (<span class=\"built_in\">integer</span>) 20</span><br></pre></td></tr></table></figure>\n\n<p>多线程修改值，使用watch可以当作redis的乐观锁操作！</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#线程一</span></span><br><span class=\"line\">127.0.0.1:6379&gt; watch money<span class=\"comment\">#监视 money，获取version，和原来的比较，发现更改了，事务失败。</span></span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; multi</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; decrby money 20</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; incrby out 20 <span class=\"comment\">#然后在这里，线程二执行set money 10000</span></span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">exec</span><span class=\"comment\">#发现这里的命令都没有执行，这就是事务为提交，这个是一个乐观锁的实现。</span></span><br><span class=\"line\">(nil)</span><br><span class=\"line\"><span class=\"comment\">#线程2</span></span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> money 10000</span><br><span class=\"line\">OK</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Jedis\"><a href=\"#Jedis\" class=\"headerlink\" title=\"Jedis\"></a>Jedis</h2><blockquote>\n<p>是redis官方推荐的java连接开发工具，使用java操作reids中间件！</p>\n</blockquote>\n<p>1、直接找maven依赖</p>\n<p>2、new 一个Jedis对象，根据Jedis的构造函数，来将redis的主机ip地址和端口号闯进去，之后的命令和上面一样，只是都是jedis.xx的形式调用。</p>\n<p>不推荐使用</p>\n<h2 id=\"SpringBoot整合\"><a href=\"#SpringBoot整合\" class=\"headerlink\" title=\"SpringBoot整合\"></a>SpringBoot整合</h2><p>在springboot2.x之后，jedis被替换为lettuce</p>\n<p>jedis：采用的是直连的，多个线程操作的，是不安全的，如果想要避免不安全的操作，使用jedis pool连接池，使用的是BIO</p>\n<p>lettuce：采用netty，实例可以在多个线程中进行分享，不存在线程不安全的情况，可以减少线程不安全的情况。可以减少线程数量。NIO</p>\n<p>重点：</p>\n<p>自定义redisTemplate</p>\n<h2 id=\"redis-conf\"><a href=\"#redis-conf\" class=\"headerlink\" title=\"redis.conf\"></a>redis.conf</h2><blockquote>\n<p>网络</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind 127.0.0.1</span><br><span class=\"line\">protected-mode yes</span><br><span class=\"line\">port 6379</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>通用</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">daemonize yes <span class=\"comment\">#以守护进程的方式运行，默认是no，需要开启为yes</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Specify the server verbosity level.</span></span><br><span class=\"line\"><span class=\"comment\"># This can be one of:</span></span><br><span class=\"line\"><span class=\"comment\"># debug (a lot of information, useful for development/testing)</span></span><br><span class=\"line\"><span class=\"comment\"># verbose (many rarely useful info, but not a mess like the debug level)</span></span><br><span class=\"line\"><span class=\"comment\"># notice (moderately verbose, what you want in production probably)</span></span><br><span class=\"line\"><span class=\"comment\"># warning (only very important / critical messages are logged)</span></span><br><span class=\"line\">loglevel notice</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Specify the log file name. Also the empty string can be used to force</span></span><br><span class=\"line\"><span class=\"comment\"># Redis to log on the standard output. Note that if you use standard</span></span><br><span class=\"line\"><span class=\"comment\"># output for logging but daemonize, logs will be sent to /dev/null</span></span><br><span class=\"line\">logfile <span class=\"string\">\"\"</span><span class=\"comment\">#日志的文件名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set the number of databases. The default database is DB 0, you can select</span></span><br><span class=\"line\"><span class=\"comment\"># a different one on a per-connection basis using SELECT &lt;dbid&gt; where</span></span><br><span class=\"line\"><span class=\"comment\"># dbid is a number between 0 and 'databases'-1</span></span><br><span class=\"line\">databases 16 <span class=\"comment\">#默认的数据库数量</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>快照</p>\n</blockquote>\n<p>持久化，在规定的时间内，执行了多少次操作，则会持久化到文件.rdb  .aof</p>\n<p>redis是内存数据库，如果没有持久化，断电就会消失</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#900s内，如果至少一个key进行了修改，就会进行持久化操作。</span></span><br><span class=\"line\">save 900 1</span><br><span class=\"line\"><span class=\"comment\">#300s内，如果至少10个key进行了修改，就会进行持久化操作</span></span><br><span class=\"line\">save 300 10</span><br><span class=\"line\"><span class=\"comment\">#60s内，如果至少10000个key进行了修改，就会进行持久化操作</span></span><br><span class=\"line\">save 60 10000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># By default Redis will stop accepting writes if RDB snapshots are enabled</span></span><br><span class=\"line\"><span class=\"comment\"># (at least one save point) and the latest background save failed.</span></span><br><span class=\"line\"><span class=\"comment\"># This will make the user aware (in a hard way) that data is not persisting</span></span><br><span class=\"line\"><span class=\"comment\"># on disk properly, otherwise chances are that no one will notice and some</span></span><br><span class=\"line\"><span class=\"comment\"># disaster will happen.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If the background saving process will start working again Redis will</span></span><br><span class=\"line\"><span class=\"comment\"># automatically allow writes again.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># However if you have setup your proper monitoring of the Redis server</span></span><br><span class=\"line\"><span class=\"comment\"># and persistence, you may want to disable this feature so that Redis will</span></span><br><span class=\"line\"><span class=\"comment\"># continue to work as usual even if there are problems with disk,</span></span><br><span class=\"line\"><span class=\"comment\"># permissions, and so forth.</span></span><br><span class=\"line\">stop-writes-on-bgsave-error yes<span class=\"comment\">#持久化如果出错，是否需要停止工作</span></span><br><span class=\"line\"></span><br><span class=\"line\">rdbcompression yes<span class=\"comment\">#是否压缩rdb文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The working directory.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># The DB will be written inside this directory, with the filename specified</span></span><br><span class=\"line\"><span class=\"comment\"># above using the 'dbfilename' configuration directive.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># The Append Only File will also be created inside this directory.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Note that you must specify a directory here, not a file name.</span></span><br><span class=\"line\">dir ./<span class=\"comment\">#持久化文件保存的目录</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>scurity</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># IMPORTANT <span class=\"doctag\">NOTE:</span> starting with Redis 6 \"requirepass\" is just a compatiblity</span></span><br><span class=\"line\"><span class=\"comment\"># layer on top of the new ACL system. The option effect will be just setting</span></span><br><span class=\"line\"><span class=\"comment\"># the password for the default user. Clients will still authenticate using</span></span><br><span class=\"line\"><span class=\"comment\"># AUTH &lt;password&gt; as usually, or more explicitly with AUTH default &lt;password&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># if they follow the new protocol: both will work.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># requirepass foobared</span></span><br><span class=\"line\">requirepass XXX<span class=\"comment\">#在这里设置登录密码</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>限制clients</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">########################### ACTIVE DEFRAGMENTATION #######################</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Once the limit is reached Redis will close all the new connections sending</span></span><br><span class=\"line\"><span class=\"comment\"># an error 'max number of clients reached'.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># maxclients 10000#设置能连接上redis的最大客户端数量</span></span><br><span class=\"line\"></span><br><span class=\"line\">maxmemory-policy noeviction<span class=\"comment\">#内存达到上限之后的默认处理策略</span></span><br><span class=\"line\"></span><br><span class=\"line\">这个策略有很多种：</span><br><span class=\"line\"><span class=\"comment\"># volatile-lru -&gt; Evict using approximated LRU, only keys with an expire set.对设置了过期时间的keys进行LRU</span></span><br><span class=\"line\"><span class=\"comment\"># allkeys-lru -&gt; Evict any key using approximated LRU.对所有的keys进行lru</span></span><br><span class=\"line\"><span class=\"comment\"># volatile-lfu -&gt; Evict using approximated LFU, only keys with an expire set.对设置了过期时间的keys进行lfu</span></span><br><span class=\"line\"><span class=\"comment\"># allkeys-lfu -&gt; Evict any key using approximated LFU.对所有的keys进行lfu</span></span><br><span class=\"line\"><span class=\"comment\"># volatile-random -&gt; Remove a random key having an expire set.随机的删除设置了过期时间的keys</span></span><br><span class=\"line\"><span class=\"comment\"># allkeys-random -&gt; Remove a random key, any key.对所有的keys随机删除</span></span><br><span class=\"line\"><span class=\"comment\"># volatile-ttl -&gt; Remove the key with the nearest expire time (minor TTL)删除即将过期的</span></span><br><span class=\"line\"><span class=\"comment\"># noeviction -&gt; Don't evict anything, just return an error on write operations.不做处理，报错</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>APPEND ONLY </p>\n</blockquote>\n<p>aof</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">appendonly no<span class=\"comment\">#默认不开启aof模式，默认使用rdb方式持久化。</span></span><br><span class=\"line\">appendfilename <span class=\"string\">\"appendonly.aof\"</span><span class=\"comment\">#持久化文件的名字</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#同步策略</span></span><br><span class=\"line\"><span class=\"comment\"># appendfsync always#每次修改，都要同步</span></span><br><span class=\"line\">appendfsync everysec<span class=\"comment\">#每秒同步一次</span></span><br><span class=\"line\"><span class=\"comment\"># appendfsync no</span></span><br></pre></td></tr></table></figure>\n\n","categories":[],"tags":[{"name":"Redis","path":"api/tags/Redis.json"}]}